
source-file ~/.config/tmux/tmux.conf.unbindings


##### settings

# new prefix binding
set -g prefix C-a

set -sg escape-time 0

set-option -g default-terminal "screen-256color"

# window and pane indexing
set -g base-index 1
setw -g pane-base-index 1

# vim keybinds in tmux
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# retain current working dir on window spawn
bind c new-window -c "#{pane_current_path}"

# edit config and reload <C-a><C-e>
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Reloaded ~/.tmux.conf\"'"
# reload tmux config <C-a><C-r>
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# splitting panes
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# using sessionizer to fuzzy find directories in new tmux session
bind-key -r f run-shell "tmux neww ~/dotfiles/ubuntu/tmux/tmux-sessionizer.sh"

# pane navigation
bind -r ^ last-window
bind -r Tab last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
bind -r C-o swap-pane -D # switch current pane to main pane i think

bind M-o resize-pane -Z
# set main-vertical to xx% of window in new layout
bind M-- run-shell "~/dotfiles/ubuntu/tmux/adaptable-resize.sh -l main-vertical -p 75"
# set main-horizontal to xx% of window in new layout
bind M-\\ run-shell "~/dotfiles/ubuntu/tmux/adaptable-resize.sh -l main-horizontal -p 75"

# kill pane/window keybinds
bind x kill-pane
bind X kill-window

bind Space list-panes
bind Enter break-pane

bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'


# pane resizing
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R




# set starting terminal title to reflect current window in tmux session
set -g set-titles on
#set -g set-titles-string "#I. #W"
set-option -g set-titles-string '#H:#S.#I.#P #W #T'

# renaming window and session
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

